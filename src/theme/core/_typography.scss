@import '../required/variables.scss';

%typebaseRoot {
	line-height: $lineheightRoot;
	margin-bottom: 0;
	margin-top: 0;
}

// Kerning
// ------------------------------------------------------------------

.kernTight {
	letter-spacing: -0.2rem;
}

.kernLoose {
	letter-spacing: 0.2rem;
}

// Typescale
// ------------------------------------------------------------------

.typeMasthead {
	@extend %typebaseRoot;
	@extend .kernTight;
	font-size: rem($typeMasthead);
	line-height: 1.4;
	&_trailer {
		margin-bottom: rem($typeMasthead/4);
	}
}

.typeHeadline {
	@extend %typebaseRoot;
	font-size: rem($typeHeadline);
	line-height: 1.4;
	&_trailer {
		margin-bottom: rem($typeHeadline/2);
	}
}

.typeByline {
	@extend .typebase;
	font-size: rem($typeByline);
	&_trailer {
		margin-bottom: rem($typeByline/2);
	}
}

.typeXL {
	@extend %typebaseRoot;
	font-size: rem($typeXL);
	&_trailer {
		margin-bottom: rem($typeXL/2);
	}
}

.typeL {
	@extend %typebaseRoot;
	font-size: rem($typeL);
	&_trailer {
		margin-bottom: rem($typeL/2);
	}
}

.typeM {
	@extend .typebase;
	font-size: rem($typeM);
	&_trailer {
		margin-bottom: rem($typeM/2);
	}
}

// Median
.typeMe {
	@extend .typebase;
	font-size: rem($typeMe);
	&_trailer {
		margin-bottom: rem($typeM/2);
	}
}

.typeS {
	@extend %typebaseRoot;
	font-size: rem($typeS);
	&_trailer {
		margin-bottom: rem($typeS/2);
	}
}

.typeXS {
	@extend %typebaseRoot;
	font-size: rem($typeXS);
	&_trailer {
		margin-bottom: rem($typeXS/2);
	}
}

// Can be used on parent element to define child type styles
// Articles or Blog posts are a good example
.typebase {
	@extend %typebaseRoot;
	p,
	li {
		margin-top: 0;
		font-size: rem($typeMe);
		margin-bottom: rem($typeMe);
		display: block;
	}
	li {
		margin-bottom: rem($typeMe/2);
	}
	ul,
	ol {
		margin-top: 0;
		margin-bottom: rem($typeMe);
	}
	img {
		display: block;
		margin-top: rem($typeMe);
		margin-bottom: rem($typeMe);
	}
}
